{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/TextField.svelte","../../src/RemoveButton.svelte","../../src/crewBuilder.js","../../src/crews/CrewData.svelte","../../src/skills/Skills.svelte","../../src/equipment/Equipment.svelte","../../src/WeaponSelector.svelte","../../src/weapons/WeaponRows.svelte","../../src/store.js","../../src/crewValidator.js","../../src/crews/Crew.svelte","../../src/Crews.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.31.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n  export let value\n  export let edit\n  export let type = \"text\"\n  export let change = () => {}\n  export let rows = 5\n</script>\n{#if edit}\n  {#if type == \"text\"}\n    <input bind:value={value} on:change={change}>\n  {:else if type == \"number\" }\n    <input type=\"number\" bind:value={value} on:change={change}>\n  {:else if type == \"textarea\" }\n    <textarea bind:value={value} on:change={change} rows={rows}></textarea>\n  {/if}\n{:else}\n  <span>{value}</span>\n{/if}\n\n<style>\n\tinput {\n\t  width: 80%;\n\t}\n\ttextarea {\n\t  width: 100%;\n\t}\n</style>","<script>\n  export let edit\n  export let click = () => {}\n</script>\n{#if edit}\n<img alt=\"Remove\" src=\"./remove.png\" width=12 on:click={click}/>\n{/if}","import factions from './data/factions.json'\nimport recruits from './data/recruits.json'\nimport skills from './data/skills.json'\nimport armors from './data/armors.json'\nimport weapons from './data/weapons.json'\nimport equipment from './data/equipment.json'\n\nlet create = (name, factionId) => {\n  var faction = createFaction(factionId)\n  var leader = createLeader(faction.name)\n  var crew = {\n    \"id\": createUUID(),\n    \"name\": name,\n    \"faction\": faction,\n    \"k\": 3,\n    \"members\": [leader],\n    \"notes\": \"\"\n  }\n  return crew\n}\n\nlet updateK = (crew) => {\n  var base = crew.members.map(m => m.cost).reduce((accumulator, currentValue) => accumulator + currentValue)\n  var upgrades = crew.members.map(m => {\n    var template = findRecruit(m.id)\n    var moveDiff = m.movement - template.movement\n    var caDiff = m.combatAbility - template.combatAbility\n    var willDiff = m.will - template.will\n    return moveDiff + caDiff + willDiff\n  }).reduce((accumulator, currentValue) => accumulator + currentValue)\n  crew.k = base + upgrades\n  return crew\n}\n\nlet addRecruit = (recruitId, crew) => {\n  var recruit = createMember(recruitId, crew.faction.name)\n\n  crew.members.push(recruit)\n  return updateK(crew)\n}\n\nlet addWeapon = (weaponId, weaponOption, member, crew) => {\n  var weapon = JSON.parse(JSON.stringify(findWeapon(weaponId)))\n  weapon.name = weapon.types.join(\" / \")\n  weapon.option = weaponOption\n  member.weapons = [...member.weapons, weapon]\n  member.options[weaponOption]--\n  return crew\n}\n\nlet addRangedWeapon = (weaponId, member, crew) => {\n  var weapon = JSON.parse(JSON.stringify(findWeapon(weaponId)))\n  weapon.name = weapon.types.join(\" / \")\n  member.weapons = [...member.weapons, weapon]\n  member.options.rangedWeapon--\n  return crew\n}\n\nlet addMeleeWeapon = (weaponId, member, crew) => {\n  var weapon = JSON.parse(JSON.stringify(findWeapon(weaponId)))\n  weapon.name = weapon.types.join(\" / \")\n  member.weapons = [...member.weapons, weapon]\n  member.options.meleeWeapon--\n  return crew\n}\n\nlet addGrenade = (weaponId, member, crew) => {\n  var weapon = JSON.parse(JSON.stringify(findWeapon(weaponId)))\n  weapon.name = weapon.types.join(\" / \")\n  member.weapons = [...member.weapons, weapon]\n  member.options.grenade--\n  return crew\n}\n\nlet removeWeapon = (weapon, member, crew) => {\n  var index = member.weapons.findIndex(w => w == weapon)\n  member.weapons.splice(index, 1)\n  member.options[weapon.option]++\n  return crew\n}\n\nlet addSkill = (skillId, member, crew) => {\n  var skill = JSON.parse(JSON.stringify(findSkill(skillId)))\n  member.skills = [...member.skills, skill]\n  member.options.skill--\n  return crew\n}\n\nlet removeSkill = (skill, member, crew) => {\n  if (skill.name != \"Leader\") {\n    var index = member.skills.findIndex(s => s == skill)\n    member.skills.splice(index, 1)\n    member.options.skill++\n  }\n  return crew\n}\n\nlet addBasicEquipment = (equipmentId, member, crew) => {\n  var equipment = JSON.parse(JSON.stringify(findEquipment(equipmentId)))\n  member.equipment = [...member.equipment, equipment]\n  member.options.basicEquipment--\n  return crew\n}\n\nlet removeEquipment = (equipment, member, crew) => {\n  if (!equipment.armor) {\n    var index = member.equipment.findIndex(e => e == equipment)\n    member.equipment.splice(index, 1)\n    member.options.basicEquipment++\n  }\n  return crew\n}\n\nlet changeFaction = (factionId, crew) => {\n  var faction = createFaction(factionId)\n  crew.faction = faction\n  return crew\n}\n\nlet hasSkill = (skillId, member) => {\n  return !!member.skills.find(skill => skill.id == skillId)\n}\n\nlet hasEquipment = (equipmentId, member) => {\n  return !!member.equipment.find(equipment => equipment.id == equipmentId)\n}\n\nlet createFaction = (factionId) => {\n  var faction = JSON.parse(JSON.stringify(findFaction(factionId)))\n  var allies = faction.allies.map(id => findFactionName(id))\n  var enemies = faction.enemies.map(id => findFactionName(id))\n  var starters = JSON.parse(JSON.stringify(faction.startingEquipment.map(id => findEquipment(id))))\n  faction.allies = allies\n  faction.enemies = enemies\n  faction.startingEquipment = starters\n  return faction\n}\n\nlet createLeader = (factionName) => {\n  var leader = JSON.parse(JSON.stringify(createMember(3, factionName)))\n  var leaderSkill = JSON.parse(JSON.stringify(findSkill(5)))\n  leader.skills.push(leaderSkill)\n\n  return leader\n}\n\nlet createMember = (recruitId, factionName) => {\n  var member = JSON.parse(JSON.stringify(findRecruit(recruitId)))\n  var armor = findArmor(member.armor)\n  member.name = \"\"\n  member.armor = armor.armor\n  member.equipment = [armor]\n  member.faction = factionName\n  member.weapons = []\n  member.skills = []\n  member.notes = \"\"\n\n  return member\n}\n\nlet findSkill = (skillId) => {\n    return skills.find(skill => skill.id == skillId)\n}\n\nlet findRecruit = (recruitId) => {\n    return recruits.find(recruit => recruit.id == recruitId)\n}\n\nlet findArmor = (armorId) => {\n    return armors.find(armor => armor.id == armorId)\n}\n\nlet findWeapon = (weaponId) => {\n  return weapons.find(weapon => weapon.id == weaponId)\n}\n\nlet findFaction = (factionId) => {\n  return factions.find(faction => faction.id == factionId)\n}\n\nlet findEquipment = (equipmentId) => {\n  return equipment.find(e => e.id == equipmentId)\n}\n\nlet findFactionName = (factionId) => {\n  return findFaction(factionId).name\n}\n\nlet createUUID = () => {\n  var dt = new Date().getTime();\n  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    var r = (dt + Math.random()*16)%16 | 0;\n    dt = Math.floor(dt/16);\n    return (c=='x' ? r :(r&0x3|0x8)).toString(16);\n  });\n  return uuid;\n}\n\nexport var crewBuilder = { create, addRecruit, updateK, addSkill, addBasicEquipment, addWeapon, addRangedWeapon, addMeleeWeapon, addGrenade, removeSkill, removeEquipment, removeWeapon, changeFaction, hasSkill, hasEquipment }","<script>\n  import TextField from '../TextField.svelte'\n  import RemoveButton from '../RemoveButton.svelte'\n\n\timport {crewBuilder} from '../crewBuilder.js';\n\n  import factions from '../data/factions.json'\n\n  export let edit\n  export let crew\n</script>\n<table class=\"pad\">\n  <tr>\n    <th>Crew Name</th>\n    <td><TextField bind:value={crew.name} edit={edit}/></td>\n    <th>Faction</th>\n    <td>\n      {#if edit}\n      <select bind:value={crew.faction.id} on:change={() => crew = crewBuilder.changeFaction(crew.faction.id, crew)}>\n        {#each factions as faction}\n          <option value={faction.id}>{faction.name}</option>\n        {/each}\n      </select>\n      {:else}\n        {crew.faction.name}\n      {/if}\n    </td>\n  </tr>\n  <tr>\n    <th colspan=\"2\">Equipment</th>\n    <th colspan=\"2\">Artifacts</th>\n  </tr>\n  <tr class=\"list\">\n    <td colspan=\"2\">\n      {#each crew.faction.startingEquipment as equipment}\n        <div>\n          <span class=\"listHeader\">{equipment.name}:</span> {equipment.description}\n        </div>\n      {/each}\n    </td>\n    <td colspan=\"2\">\n      <TextField type=\"textarea\" bind:value={crew.artifacts} edit={edit}/>\n    </td>\n  </tr>\n  <tr>\n    <th class=\"wide\" colspan=\"4\">Notes</th>\n  </tr>\n  <tr class=\"list\">\n    <td class=\"wide notes\" colspan=\"4\">\n      {#each crew.faction.discounts as {type, value, times}, i}\n        <span>\n          {value}% discount on {type} {#if times == -2}once every visit{:else if times > 0}on {times} occasions{/if} at The Stalls.\n        </span>\n        <br>\n      {/each}\n      <TextField type=\"textarea\" bind:value={crew.notes} edit={edit}/>\n    </td>\n  </tr>\n</table>\n<style>\n  .pad {\n    padding-left: 2px;\n    padding-right: 2px;\n  }\n</style>","<script>\n  import TextField from '../TextField.svelte'\n  import RemoveButton from '../RemoveButton.svelte'\n\n\timport {crewBuilder} from '../crewBuilder.js';\n\n  import skills from '../data/skills.json'\n\n  export let edit\n  export let crew\n  export let member\n  export let compact\n\n\tlet selectedSkill;\n</script>\n<table>\n  <tr class=\"wide\">\n    <th>Skills</th>\n  </tr>\n  <tr class=\"list wide\">\n    <td class=\"wide fixed\">\n      {#each member.skills as skill}\n        <div>\n          {#if skill.name != \"Leader\"}\n            <RemoveButton bind:edit={edit} click={() => crew = crewBuilder.removeSkill(skill, member, crew)}/>\n          {/if}\n          <span class=\"listHeader\">{skill.name}:</span>\n          {#if compact}\n            {#each skill.effects as effect, i}\n              <span>{effect} </span>\n              {#if i < skill.effects.length - 1}\n                <br>\n              {/if}\n            {/each}\n          {:else}\n            {skill.description}\n          {/if}\n        </div>\n      {/each}\n      {#if member.options.skill > 0 && edit}\n        <label for=\"skills\">Add skill</label>\n        <select bind:value={selectedSkill} name=\"skills\">\n          {#each skills as newSkill}\n            {#if !crewBuilder.hasSkill(newSkill.id, member)}\n              <option value=\"{newSkill.id}\">{newSkill.name}</option>\n            {/if}\n          {/each}\n        </select>\n        <button on:click={() => crew = crewBuilder.addSkill(selectedSkill, member, crew)}>Add</button>\n      {/if}\n    </td>\n  </tr>\n</table>","<script>\n  import TextField from '../TextField.svelte'\n  import RemoveButton from '../RemoveButton.svelte'\n\n\timport {crewBuilder} from '../crewBuilder.js';\n\n  import equipment from '../data/equipment.json'\n\n  export let edit\n  export let compact = true\n  export let crew\n  export let member\n\n\tlet basicEquipment = equipment.filter(e => e.category == \"basic\");\n\tlet selectedEquipment;\n</script>\n<table>\n  <tr class=\"wide\">\n    <th class=\"wide\" colspan=\"4\">Equipment</th>\n  </tr>\n  <tr class=\"list wide\">\n    <td class=\"wide equipment fixedTall\" colspan=\"4\">\n      {#each member.equipment as equipment}\n        <div>\n          {#if !equipment.armor}\n            <RemoveButton bind:edit={edit} click={() => crew = crewBuilder.removeEquipment(equipment, member, crew)}/>\n          {/if}\n          {#if compact && equipment.rules}\n            <span class=\"listHeader\">{equipment.name}:</span> {#if equipment.armor}Armor {equipment.armor}<br>{/if}\n            {#each equipment.rules as rule, i}\n              <span>{rule} </span>\n              {#if i < equipment.rules.length - 1}\n                <br>\n              {/if}\n            {/each}\n          {:else}\n            <span class=\"listHeader\">{equipment.name}:</span> {equipment.description}\n          {/if}\n        </div>\n      {/each}\n\n      {#if member.options.basicEquipment > 0 && edit}\n        <label for=\"basicEquipment\">Add basic equipment</label>\n        <select bind:value={selectedEquipment} name=\"basicEquipment\">\n          {#each basicEquipment as newEquipment}\n            <option value=\"{newEquipment.id}\">{newEquipment.name}</option>\n          {/each}\n        </select>\n        <button on:click={() => crew = crewBuilder.addBasicEquipment(selectedEquipment, member, crew)}>Add</button>\n      {/if}\n    </td>\n  </tr>\n</table>","<script>\n  import weapons from './data/weapons.json'\n\n  export let label = \"Add weapon\"\n  export let weaponSet = \"all\"\n\texport let selectedWeapon;\n\texport let click = () => {}\n\n  let rangedWeapons = weapons.filter(w => w.category != \"grenade\").filter(w => w.range.max != 0);\n  let meleeWeapons = weapons.filter(w => w.category != \"grenade\").filter(w => w.range.min == 0);\n  let grenades = weapons.filter(w => w.category == \"grenade\");\n\n  let selectedSet = weapons\n\n\tswitch(weaponSet) {\n\t  case \"ranged\":\n\t    selectedSet = rangedWeapons\n\t    break\n\t  case \"melee\":\n\t    selectedSet = meleeWeapons\n\t    break\n\t  case \"grenades\":\n\t    selectedSet = grenades\n\t    break\n\t}\n</script>\n<tr class=\"list\">\n  <td class=\"wide\" colspan=\"4\">\n    <label for=\"weapon\">{label}</label>\n    <select bind:value={selectedWeapon} name=\"weapon\">\n      {#each selectedSet as weapon}\n        <option value=\"{weapon.id}\">\n          {weapon.types.join(\" / \")}\n        </option>\n      {/each}\n    </select>\n    <button on:click={click}>Add</button>\n  </td>\n</tr>","<script>\n  import TextField from '../TextField.svelte'\n  import RemoveButton from '../RemoveButton.svelte'\n  import WeaponSelector from '../WeaponSelector.svelte'\n\n\timport {crewBuilder} from '../crewBuilder.js';\n\n  import weapons from '../data/weapons.json'\n\n  export let edit\n  export let crew\n  export let member\n\n  let rangedWeapons = weapons.filter(w => w.category != \"grenade\").filter(w => w.range.max != 0);\n  let meleeWeapons = weapons.filter(w => w.category != \"grenade\").filter(w => w.range.min == 0);\n  let grenades = weapons.filter(w => w.category == \"grenade\");\n\n\tlet selectedRangedWeapon;\n\tlet selectedMeleeWeapon;\n\tlet selectedGrenade;\n</script>\n<table>\n  <tr>\n    <th>Weapon Type</th>\n    <th>Range</th>\n    <th>Firepower</th>\n    <th>Damage</th>\n  </tr>\n  {#each member.weapons as weapon}\n    <tr class=\"fixed\">\n      <td class=\"list vcenter\">\n        <RemoveButton bind:edit={edit} click={() => crew = crewBuilder.removeWeapon(weapon, member, crew)}/>\n        <img src=\"{weapon.category}.png\" alt={weapon.category} width=\"12px\">\n        <TextField bind:value={weapon.name} edit={edit}/>\n      </td>\n      <td class=\"vcenter\">{#if weapon.range.min == 0}melee{:else}{weapon.range.min}{/if}{#if weapon.range.max > 0}-{weapon.range.max}{/if}</td>\n      <td class=\"vcenter\">{weapon.firepower.value}{#if weapon.firepower.per}/{weapon.firepower.per}{/if}</td>\n      <td class=\"vcenter\">\n        {#if weapon.damage.template}{weapon.damage.template}, {/if}{weapon.damage.value}{#if weapon.damage.per}/{weapon.damage.per}{/if}{#if weapon.rules.length > 0}, {/if}\n        {#each weapon.rules as rule, i}\n          {rule}{#if i < weapon.rules.length - 1}, {/if}\n        {/each}\n      </td>\n    </tr>\n  {/each}\n  {#if member.weapons.length < 4}\n    {#each Array(4 - member.weapons.length) as _, row}\n      <tr class=\"fixed\">\n        <td class=\"list vcenter\"></td>\n        <td class=\"list vcenter\"></td>\n        <td class=\"list vcenter\"></td>\n        <td class=\"list vcenter\"></td>\n      </tr>\n    {/each}\n  {/if}\n  {#if member.options.rangedWeapon > 0 && edit}\n    <WeaponSelector label=\"Add ranged weapon\" weaponSet=\"ranged\" bind:selectedWeapon={selectedRangedWeapon} click={() => crew = crewBuilder.addWeapon(selectedRangedWeapon, \"rangedWeapon\", member, crew)}/>\n  {/if}\n  {#if member.options.meleeWeapon > 0 && edit}\n    <WeaponSelector label=\"Add melee weapon\" weaponSet=\"melee\" bind:selectedWeapon={selectedMeleeWeapon} click={() => crew = crewBuilder.addWeapon(selectedMeleeWeapon, \"meleeWeapon\", member, crew)}/>\n  {/if}\n  {#if member.options.grenade > 0 && edit}\n    <WeaponSelector label=\"Add grenade\" weaponSet=\"grenades\" bind:selectedWeapon={selectedGrenade} click={() => crew = crewBuilder.addWeapon(selectedGrenade, \"grenade\", member, crew)}/>\n  {/if}\n</table>\n<style>\n  tr.fixed {\n    height: 36px;\n  }\n  td.vcenter {\n    vertical-align: middle;\n  }\n</style>","import { writable } from \"svelte/store\";\n\nvar storedCrews = localStorage.getItem(\"crews\")\nif (!storedCrews) {\n  console.log(\"Init crews\")\n  localStorage.setItem(\"crews\", JSON.stringify([]))\n  storedCrews = localStorage.getItem(\"crews\")\n}\n\nlet save = (crews) => {\n  localStorage.setItem(\"crews\", JSON.stringify(crews))\n}\n\nexport var store = {crews: JSON.parse(storedCrews), save}","import factions from './data/factions.json'\nimport recruits from './data/recruits.json'\nimport skills from './data/skills.json'\nimport armors from './data/armors.json'\nimport weapons from './data/weapons.json'\nimport equipment from './data/equipment.json'\n\nlet validateModel = (crew) => {\n  crew.members.forEach(validateMember)\n\n  if (!crew.notes) {\n    crew.notes = \"\"\n  }\n  if (!crew.artifacts) {\n    crew.artifacts = \"\"\n  }\n\n  return crew\n}\n\nlet validateMember = (member) => {\n  member.skills.forEach(validateSkill)\n  member.weapons.forEach(w => validateWeapon(w, member))\n  if (!member.notes) {\n    member.notes = \"\"\n  }\n}\n\nlet validateSkill = (skill) => {\n  if (!skill.effects) {\n    var effects = JSON.parse(JSON.stringify(skills.find(s => s.id == skill.id).effects))\n    skill.effects = effects\n  }\n}\n\nlet validateWeapon = (weapon, member) => {\n  if (weapon.damage.template == \"Small Blast\") {\n    weapon.damage.template = \"SBT\"\n  }\n  if (weapon.damage.template == \"Large Blast\") {\n    weapon.damage.template = \"LBT\"\n  }\n  if (!weapon.option) {\n    if (weapon.category == \"grenade\") {\n      weapon.option = \"grenade\"\n    } else if (weapon.category != \"melee\") {\n      weapon.option = \"rangedWeapon\"\n    } else {\n      var otherWeapons = member.weapons\n        .filter(w => w != weapon)\n        .filter(w => w.category != \"grenade\")\n        .filter(w => w.category == \"melee\")\n        .filter(w => w.option)\n      if (otherWeapons.length > 0) {\n        weapon.option = \"meleeWeapon\"\n      } else {\n        weapon.option = \"rangedWeapon\"\n      }\n    }\n  }\n}\n\nexport var crewValidator = { validateModel }","<script>\n  import TextField from '../TextField.svelte'\n  import CrewData from './CrewData.svelte'\n  import Skills from '../skills/Skills.svelte'\n  import Equipment from '../equipment/Equipment.svelte'\n  import WeaponRows from '../weapons/WeaponRows.svelte'\n\n\timport {store} from '../store.js';\n\timport {crewBuilder} from '../crewBuilder.js';\n\timport {crewValidator} from '../crewValidator.js';\n\n  import recruits from '../data/recruits.json'\n  import factions from '../data/factions.json'\n\n\texport let crew\n\texport let show\n\texport let edit = false\n\tlet compact = true\n\n\tcrew = crewValidator.validateModel(crew)\n\n\tlet nonLeaders = recruits.filter(r => r.name != \"Leader\");\n\n\tlet selectedRecruit;\n\n\tfunction saveCrew() {\n\t  var index = store.crews.findIndex(c => c.id == crew.id)\n\t  if (index != -1) {\n\t    store.crews.splice(index, 1, crew)\n\t  } else {\n\t    store.crews.push(crew)\n\t  }\n\t  store.save(store.crews)\n\t}\n</script>\n<div class=\"no-print\">\n  <button on:click={() => edit = !edit}>{#if edit}Lock{:else}Edit{/if}</button>\n  <button on:click={() => compact = !compact}>{#if compact}Full{:else}Compact{/if}</button>\n  <button on:click={() => show = false}>Back</button>\n</div>\n<div>K:{crew.k}</div>\n<CrewData bind:crew={crew} bind:edit={edit}/>\n<div class=\"pagebreak\"> </div>\n<div class=\"grid-container\">\n  {#each crew.members as member}\n    <div class=\"grid-item\">\n      <table>\n        <tr>\n          <th>Name</th>\n          <td><TextField bind:value={member.name} edit={edit}/></td>\n          <th>Faction</th>\n          <td>{crew.faction.name}</td>\n        </tr>\n        <tr>\n          <th>Wounds</th>\n          <td>{member.wounds}</td>\n          <th>Combat Experience</th>\n          <td>{member.cost}</td>\n        </tr>\n        <tr>\n          <th>Movement</th>\n          <th>Combat Ability</th>\n          <th>Armor</th>\n          <th>Will</th>\n        </tr>\n        <tr>\n          <td><TextField bind:value={member.movement} edit={edit} type=\"number\" change={() => crew = crewBuilder.updateK(crew)}/></td>\n          <td><TextField bind:value={member.combatAbility} edit={edit} type=\"number\" change={() => crew = crewBuilder.updateK(crew)}/></td>\n          <td>{member.armor}</td>\n          <td><TextField bind:value={member.will} edit={edit} type=\"number\" change={() => crew = crewBuilder.updateK(crew)}/></td>\n        </tr>\n      </table>\n      <Skills bind:crew={crew} bind:member={member} bind:compact={compact} bind:edit={edit}/>\n      <Equipment bind:crew={crew} bind:member={member} bind:compact={compact} bind:edit={edit}/>\n      <WeaponRows bind:crew={crew} bind:member={member} bind:edit={edit}/>\n      <table>\n        <tr class=\"wide\">\n          <th>Notes</th>\n        </tr>\n        <tr class=\"list wide\">\n          <td class=\"wide fixed\">\n            <TextField type=\"textarea\" bind:value={member.notes} edit={edit}/>\n          </td>\n        </tr>\n      </table>\n      <div class=\"pagebreak\"> </div>\n    </div>\n  {/each}\n</div>\n{#if edit}\n<div>\n  <label for=\"recruit\">Add recruit</label>\n  <select bind:value={selectedRecruit} name=\"recruit\">\n    {#each nonLeaders as newRecruit}\n      <option value=\"{newRecruit.id}\">{newRecruit.name}</option>\n    {/each}\n  </select>\n  <button on:click={() => crew = crewBuilder.addRecruit(selectedRecruit, crew)}>Add</button>\n</div>\n<button on:click={saveCrew}>Save</button>\n{/if}\n<div class=\"no-print\">\n  <button on:click={() => edit = !edit}>{#if edit}Lock{:else}Edit{/if}</button>\n  <button on:click={() => show = false}>Back</button>\n</div>","<script>\n\timport Crew from './crews/Crew.svelte';\n\timport {store} from './store.js';\n\timport {crewBuilder} from './crewBuilder.js';\n\n\tvar crewList = store.crews\n\n\tvar newCrew = false;\n\tvar view = false;\n\n  let crew;\n\tfunction editCrew(c) {\n    newCrew = true;\n    crew = c\n  }\n\n  function deleteCrew(c) {\n    var index = crewList.findIndex(cr => cr.id == c.id)\n    if (index != -1) {\n      crewList.splice(index, 1)\n    }\n    store.save(crewList)\n    crewList = store.crews\n  }\n\n  function viewCrew(c) {\n    view = true;\n    crew = c\n  }\n</script>\n{#if !newCrew && !view}\n<button on:click={() => editCrew(crewBuilder.create(\"\",0))}>Add Crew</button>\n<ul>\n\t{#each crewList as eCrew}\n\t\t<li>\n\t\t\t<img on:click={() => editCrew(eCrew)} src=\"./edit.png\" width=16 alt=\"Edit\"/>\n\t\t\t<img on:click={() => deleteCrew(eCrew)} src=\"./remove.png\" width=16 alt=\"Delete\"/>\n\t\t\t<a on:click={() => viewCrew(eCrew)} on:>{eCrew.name} ({eCrew.k} K)</a>\n\t\t</li>\n\t{/each}\n</ul>\n{:else if newCrew && !view}\n<Crew crew={crew} bind:show={newCrew} edit={true}/>\n{:else}\n<Crew crew={crew} bind:show={view} edit={false}/>\n{/if}\n\n<style>\n  ul {\n\t  text-align: left;\n  }\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","select_option","select","option","__value","selected","select_value","selected_option","querySelector","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","add_flush_callback","flushing","seen_callbacks","Set","flush","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","bind","index","props","undefined","bound","create_component","mount_component","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","prop_values","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","indexOf","splice","$$props","obj","$$set","keys","edit","change","rows","click","updateK","crew","base","members","cost","reduce","accumulator","currentValue","upgrades","template","findRecruit","id","movement","combatAbility","will","k","createFaction","factionId","faction","JSON","parse","stringify","findFaction","allies","findFactionName","enemies","starters","startingEquipment","findEquipment","createLeader","factionName","leader","createMember","leaderSkill","findSkill","skills","recruitId","member","armor","findArmor","equipment","weapons","notes","skillId","find","skill","recruits","recruit","armorId","armors","findWeapon","weaponId","weapon","factions","equipmentId","e","createUUID","dt","Date","getTime","replace","Math","random","floor","toString","crewBuilder","basicEquipment","weaponOption","types","join","findIndex","s","w","description","artifacts","discounts","effects","selectedSkill","compact","rules","selectedEquipment","category","label","weaponSet","selectedWeapon","rangedWeapons","range","max","meleeWeapons","min","grenades","selectedSet","firepower","per","damage","rangedWeapon","meleeWeapon","grenade","selectedRangedWeapon","selectedMeleeWeapon","selectedGrenade","storedCrews","localStorage","getItem","console","log","setItem","store","crews","save","validateMember","validateSkill","validateWeapon","crewValidator","wounds","show","selectedRecruit","nonLeaders","crewList","newCrew","view","editCrew","deleteCrew","cr","viewCrew","slice","eCrew","body"],"mappings":"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"}